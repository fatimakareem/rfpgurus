var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ViewEncapsulation, HostListener, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { IsMobileService } from '../services/isMobile.service';
import { DateService } from '../services/date.service';
export var TimePickerComponent = (function () {
    function TimePickerComponent(isMobileService, dateService, eRef) {
        this.isMobileService = isMobileService;
        this.dateService = dateService;
        this.eRef = eRef;
        this.selectedimeChange = new EventEmitter();
        this.pickerVisible = false;
        this.isMobile = isMobileService.isMobile;
    }
    TimePickerComponent.prototype.offClick = function (event) {
        if (!this.eRef.nativeElement.contains(event.target)) {
            this.pickerVisible = false;
        }
    };
    Object.defineProperty(TimePickerComponent.prototype, "formattedTime", {
        get: function () {
            return this.dateService.formatHHMM_AMPM(this.selectedHour, this.selectedMinute);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePickerComponent.prototype, "mobileFormattedTime", {
        get: function () {
            return (this.selectedHour < 10 ? '0' + this.selectedHour : this.selectedHour) + ":" + (this.selectedMinute < 10 ? '0' + this.selectedMinute : this.selectedMinute);
        },
        set: function (value) {
            var hour = value.split(':')[0];
            var minute = value.split(':')[1];
            if (parseInt(hour)) {
                this.selectedHour = parseInt(hour);
            }
            else {
                this.selectedHour = 0;
            }
            if (parseInt(minute)) {
                this.selectedMinute = parseInt(minute);
            }
            else {
                this.selectedMinute = 0;
            }
        },
        enumerable: true,
        configurable: true
    });
    TimePickerComponent.prototype.ngOnInit = function () {
        if (this.selectedMinute == null) {
            this.selectedMinute = 0;
        }
        if (this.selectedHour == null) {
            this.selectedHour = 12;
        }
    };
    TimePickerComponent.prototype.setTimeToNow = function () {
        var now = new Date();
        this.selectedHour = now.getHours();
        this.selectedMinute = now.getMinutes();
    };
    TimePickerComponent.prototype.closePicker = function () {
        this.pickerVisible = false;
    };
    __decorate([
        Input(), 
        __metadata('design:type', Date)
    ], TimePickerComponent.prototype, "selectedTime", void 0);
    __decorate([
        Output(), 
        __metadata('design:type', Object)
    ], TimePickerComponent.prototype, "selectedimeChange", void 0);
    __decorate([
        HostListener('document:click', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Object]), 
        __metadata('design:returntype', void 0)
    ], TimePickerComponent.prototype, "offClick", null);
    TimePickerComponent = __decorate([
        Component({
            selector: 'ngx-time-picker',
            templateUrl: './timePicker.component.html',
            encapsulation: ViewEncapsulation.None,
            styleUrls: ['../../assets/date-picker.css']
        }), 
        __metadata('design:paramtypes', [IsMobileService, DateService, ElementRef])
    ], TimePickerComponent);
    return TimePickerComponent;
}());
//# sourceMappingURL=C:/Code/ngx-datetimepicker/ngx-datetimepicker/src/app/timePicker.component/timePicker.component.js.map