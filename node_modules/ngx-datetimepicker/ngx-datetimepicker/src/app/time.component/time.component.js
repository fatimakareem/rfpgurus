var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
export var TimeComponent = (function () {
    function TimeComponent() {
        this.selectedHourChange = new EventEmitter();
        this.selectedMinuteChange = new EventEmitter();
        this.hours = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];
        this.minutes = ['0', '5', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55'];
    }
    Object.defineProperty(TimeComponent.prototype, "formatSelectedMinute", {
        get: function () {
            return (this.selectedMinute <= 9 ? '0' + this.selectedMinute : this.selectedMinute);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeComponent.prototype, "formatSelectedHour", {
        get: function () {
            if (this.selectedHour == 12 || this.selectedHour == 0) {
                return '12';
            }
            return (this.selectedHour > 12 ? this.selectedHour - 12 : this.selectedHour);
        },
        enumerable: true,
        configurable: true
    });
    TimeComponent.prototype.ngOnInit = function () {
        if (!this.selectedHour) {
            this.selectedHour = 12;
        }
        if (!this.selectedMinute) {
            this.selectedMinute = 0;
        }
        if (this.selectedHour >= 12) {
            this.selectedClock = 'pm';
        }
    };
    TimeComponent.prototype.selectHourChange = function (hour) {
        hour = this.selectedClock == 'pm' ? parseInt(hour) + 12 : hour;
        this.selectedHourChange.emit(hour);
        this.selectedHour = hour;
        this.minutesOpen = false;
        this.hoursOpen = false;
    };
    TimeComponent.prototype.selectMinuteChange = function (minute) {
        this.selectedMinuteChange.emit(minute);
        this.selectedMinute = minute;
        this.minutesOpen = false;
        this.hoursOpen = false;
    };
    TimeComponent.prototype.selectClockChange = function (clock) {
        if (this.selectedClock != clock) {
            this.selectedClock = clock;
            var hour = 0;
            hour = this.selectedClock == 'pm' ? parseInt(this.selectedHour) + 12 : this.selectedHour - 12;
            this.selectedHour = hour;
            this.selectedHourChange.emit(hour);
        }
    };
    TimeComponent.prototype.toggleHourMenu = function () {
        this.minutesOpen = false;
        this.hoursOpen = !this.hoursOpen;
    };
    TimeComponent.prototype.toggleMinuteMenu = function () {
        this.hoursOpen = false;
        this.minutesOpen = !this.minutesOpen;
    };
    __decorate([
        Input(), 
        __metadata('design:type', Number)
    ], TimeComponent.prototype, "selectedHour", void 0);
    __decorate([
        Output(), 
        __metadata('design:type', Object)
    ], TimeComponent.prototype, "selectedHourChange", void 0);
    __decorate([
        Input(), 
        __metadata('design:type', Number)
    ], TimeComponent.prototype, "selectedMinute", void 0);
    __decorate([
        Output(), 
        __metadata('design:type', Object)
    ], TimeComponent.prototype, "selectedMinuteChange", void 0);
    TimeComponent = __decorate([
        Component({
            selector: 'ngx-time',
            templateUrl: './time.component.html',
            encapsulation: ViewEncapsulation.None
        }), 
        __metadata('design:paramtypes', [])
    ], TimeComponent);
    return TimeComponent;
}());
//# sourceMappingURL=C:/Code/ngx-datetimepicker/ngx-datetimepicker/src/app/time.component/time.component.js.map