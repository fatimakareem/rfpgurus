var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter, ViewEncapsulation, HostListener, ElementRef } from '@angular/core';
import { IsMobileService } from '../services/isMobile.service';
import { DateService } from '../services/date.service';
export var DatePickerComponent = (function () {
    function DatePickerComponent(isMobileService, dateService, eRef) {
        this.isMobileService = isMobileService;
        this.dateService = dateService;
        this.eRef = eRef;
        this.selectedDateChange = new EventEmitter();
        this.pickerVisible = false;
        this.isMobile = isMobileService.isMobile;
    }
    DatePickerComponent.prototype.offClick = function (event) {
        if (!this.eRef.nativeElement.contains(event.target)) {
            this.pickerVisible = false;
        }
    };
    Object.defineProperty(DatePickerComponent.prototype, "formattedDate", {
        get: function () {
            return this.dateService.formatMMDDYYYY(this.selectedDate);
        },
        enumerable: true,
        configurable: true
    });
    DatePickerComponent.prototype.ngOnInit = function () {
        //If no date is selected then default to today's date.
        if (!this.selectedDate) {
            this.selectedDate = new Date();
        }
        if (typeof this.selectedDate == 'string') {
            this.selectedDate = new Date(this.selectedDate);
        }
    };
    DatePickerComponent.prototype.newDatePicked = function (date) {
        this.selectedDateChange.emit(date);
        this.selectedDate = date;
    };
    DatePickerComponent.prototype.closePicker = function (close) {
        this.pickerVisible = close;
    };
    __decorate([
        Input(), 
        __metadata('design:type', Date)
    ], DatePickerComponent.prototype, "selectedDate", void 0);
    __decorate([
        Output(), 
        __metadata('design:type', Object)
    ], DatePickerComponent.prototype, "selectedDateChange", void 0);
    __decorate([
        HostListener('document:click', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Object]), 
        __metadata('design:returntype', void 0)
    ], DatePickerComponent.prototype, "offClick", null);
    DatePickerComponent = __decorate([
        Component({
            selector: 'ngx-date-picker',
            templateUrl: './datePicker.component.html',
            encapsulation: ViewEncapsulation.None,
            styleUrls: ['../../assets/date-picker.css']
        }), 
        __metadata('design:paramtypes', [IsMobileService, DateService, ElementRef])
    ], DatePickerComponent);
    return DatePickerComponent;
}());
//# sourceMappingURL=C:/Code/ngx-datetimepicker/ngx-datetimepicker/src/app/datePicker.component/datePicker.component.js.map