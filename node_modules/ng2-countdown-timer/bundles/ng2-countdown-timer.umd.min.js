!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("ng2-countdown-timer",["exports","@angular/core","@angular/common"],t):t(e["ng2-countdown-timer"]={},e.ng.core,e.ng.common)}(this,function(e,t,s){"use strict";var n=function(){function e(){var e=this;this.displayString="",this.showZero=!1,this.reached=new t.EventEmitter,this.display=[],this.displayNumbers=[],this.wasReached=!1,setInterval(function(){return e._displayString()},100)}return e.prototype._displayString=function(){if(!this.wasReached){"string"==typeof this.units&&(this.units=this.units.split("|"));var e=new Date(this.end),t=new Date,s=e-t;(s<100&&0<s||s<0&&!this.wasReached)&&(this.wasReached=!0,this.reached.next(t));var n,i,o=this.units[this.units.length-1],r={year:290304e5,month:24192e5,weeks:6048e5,days:864e5,hours:36e5,minutes:6e4,seconds:1e3},a={},u="",d="",c=s;for(n in this.units)if(this.units.hasOwnProperty(n)){if(!1===r[(i=this.units[n].trim()).toLowerCase()])throw new Error("Cannot repeat unit: "+i);if(!1===r.hasOwnProperty(i.toLowerCase()))throw new Error("Unit: "+i+" is not supported. Please use following units: year, month, weeks, days, hours, minutes, seconds, milliseconds");a[i]=this.wasReached?0:c/r[i.toLowerCase()],a[i]=o===i?Math.ceil(a[i]):Math.floor(a[i]),c-=a[i]*r[i.toLowerCase()],r[i.toLowerCase()]=!1,a[i]=0<a[i]?a[i]:0,d+=" "+a[i]+" | ",u+=" "+i}null!==this.text&&this.text||(this.text={Year:"Year",Month:"Month",Weeks:"Weeks",Days:"Days",Hours:"Hours",Minutes:"Minutes",Seconds:"Seconds",MilliSeconds:"Milliseconds"}),this.displayString=u.replace("Year",this.text.Year+" | ").replace("Month",this.text.Month+" | ").replace("Weeks",this.text.Weeks+" | ").replace("Days",this.text.Days+" | ").replace("Hours",this.text.Hours+" | ").replace("Minutes",this.text.Minutes+" | ").replace("Seconds",this.text.Seconds),this.displayNumbers=d.split("|"),this.display=this.displayString.split("|")}},e.decorators=[{type:t.Component,args:[{selector:"countdown",template:'<div class="countdown">\n  <div *ngFor="let time of display; let i = index" class="measurements {{time}}">\n    <p class="measurements-number">\n      {{ (showZero && displayNumbers[i] < 10) ? \'0\' + displayNumbers[i].trim() : displayNumbers[i]}}\n    </p>\n    <span *ngIf="display[i+1]" class="divider"> {{divider}} </span>\n    <p class="measurements-text">\n      {{time}}\n    </p>\n  </div>\n</div>\n<ng-content></ng-content>',styles:['.countdown{display:flex;align-items:center;justify-content:center;align-content:center;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif}.countdown .measurements{flex:.1}.countdown .measurements .divider{float:right}']}]}],e.ctorParameters=function(){return[]},e.propDecorators={units:[{type:t.Input}],end:[{type:t.Input}],displayString:[{type:t.Input}],text:[{type:t.Input}],divider:[{type:t.Input}],showZero:[{type:t.Input}],reached:[{type:t.Output}]},e}(),i=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[s.CommonModule],declarations:[n],exports:[n]}]}],e}();e.CountdownComponent=n,e.CountdownModule=i,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng2-countdown-timer.umd.min.js.map