{
  "version": 3,
  "file": "angularcli-star-rating.umd.min.js",
  "sources": [
    "ng://angularcli-star-rating/out/angularcli-star-rating.component.ts"
  ],
  "sourcesContent": [
    "import { Component, Input, Output,  AfterViewInit, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'cli-star-rating',\n  template: `<span class=\"cli-star\" *ngIf=\"starReadonly\">\n  <i  *ngFor=\"let i of star\" class=\"fa\" aria-hidden=\"true\" \n  [ngClass]=\"{'fa-star-o':i == 'false','fa-star' :i == 'full', 'fa-star-half-o' : i == 'half'}\"></i>\n\n</span>\n<span title=\"{{rateText}}\" class=\"cli-star cli-star-hover\"  *ngIf=\"!starReadonly\">\n  <i  *ngFor=\"let i of star;let ix = index\" class=\"fa\" aria-hidden=\"true\" \n  (click) = \"rateIt(ix)\" (mouseover)=\"addHoverClass(ix)\" (mouseleave)=\"resetHover()\"\n  [ngClass]=\"{'fa-star-o':i == 'false','fa-star' :i == 'full' || hoverStar[ix], \n    'fa-star-half-o' : i == 'half'}\"></i>\n\n</span>`,\n  styles: [`.cli-star{display:inline-block;}\n.cli-star-hover i:hover~i{opacity:0.3;}\n.cli-star-hover:hover .fa-star-o.fa-star:before,\n.cli-star-hover:hover .fa-star-half-o.fa-star:before{content:'\\\\F005';}`]\n})\nexport class AngularcliStarRatingComponent implements AfterViewInit {\n\n  @Input('rating') rating : Number = 0;\n  @Input('starReadonly') starReadonly : Boolean = true;\n  @Output() onStarRate  = new EventEmitter<any>();\n  @Input('starRateText') rateText : any = \"Click to Rate.\"\n\n  star :  Array<string> =[\"false\",\"false\",\"false\",\"false\",\"false\"];\n  hoverStar : Array<Boolean> = [false,false,false,false,false];\n\n  constructor() { }\n\n  ngAfterViewInit(){\n    this.checkRating();\n  }\n  addHoverClass(index : Number){\n    this.hoverStar = [false,false,false,false,false];\n    for(let p=0;p<5;p++){\n      if(p <= index)this.hoverStar[p] = true;\n    }\n  }\n  resetHover(){\n    this.hoverStar = [false,false,false,false,false];\n  }\n  checkRating(){\n    if(this.rating <= 5 && this.rating >= 0){\n      if(this.rating > 0)this.loadStar(this.rating);\n    }else{\n      console.log(\"Rating should be between 0 and 5\");\n    }\n  }\n  resetStar(){\n    this.star = [\"false\",\"false\",\"false\",\"false\",\"false\"];\n  }\n  rateIt(num : any){\n    this.rating = num;\n    this.resetStar();\n    this.fillStar(this.rating);\n    let value = num + 1;\n    this.onStarRate.emit([value]);\n   \n  }\n\n  fillStar(num : Number){\n    for(let x= 0; x< 5;x++){\n      if(num >=x)this.star[x] = \"full\";\n    }\n  }\n  loadStar(num : any){\n    let halfStar = num%1 != 0 ? true : false;// check number is round or double\n    let halfNum = Math.floor(num);//\n    for(let x= 0; x< 5;x++){\n      if(x < num)this.star[x] = \"full\";\n      if(halfStar && halfNum == x)this.star[x] = \"half\";\n    }\n  }\n\n}\n"
  ],
  "names": [
    "AngularcliStarRatingComponent",
    "this",
    "rating",
    "starReadonly",
    "onStarRate",
    "EventEmitter",
    "rateText",
    "star",
    "hoverStar",
    "checkRating",
    "p",
    "index",
    "loadStar",
    "console",
    "log",
    "num",
    "resetStar",
    "fillStar",
    "value",
    "emit",
    "x",
    "halfStar",
    "halfNum",
    "Math",
    "floor",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "Output",
    "Input",
    "AngularcliStarRatingModule",
    "decorators",
    "NgModule"
  ],
  "mappings": "6UAAA,SAAAA,IA+BAC,KAAAC,OAAA,EARAD,KAAAE,cAAA,EACAF,KAAAG,WAAA,IAAAC,EAAAA,aACAJ,KAAAK,SAAA,iBACAL,KAAAM,MAAA,QAAA,QAAA,QAAA,QAAA,SAEAN,KAAAO,YAAA,GAAA,GAAA,GAAA,GAAA,GAgDA,8CA3CAP,KAAAQ,qDAGAR,KAAAO,YAAA,GAAA,GAAA,GAAA,GAAA,GACI,IAAK,IAATE,EAAiC,EAAjCA,EAAuC,EAAvCA,IACAA,GAAAC,IACSV,KAAKO,UAAdE,IAAA,sCAGAT,KAAAO,YAAA,GAAA,GAAA,GAAA,GAAA,uCAGAP,KAAAC,QAAA,GAAAD,KAAAC,QAAA,EACWD,KAAXC,OAAA,GACSD,KAAKW,SAASX,KAAvBC,QACAW,QAAAC,IAAA,sEAIAb,KAAWM,MAAX,QAAA,QAAA,QAAA,QAAA,yCAGAN,KAAAC,OAAAa,EACId,KAAKe,YACLf,KAAKgB,SAAShB,KAAlBC,QACI,IAAJgB,EAAAH,EAAA,EACId,KAAJG,WAAAe,MAAAD,sCAKA,IAAW,IAAXE,EAAA,EAAAA,EAAA,EAAAA,IACAL,GAAAK,IACSnB,KAATM,KAAAa,GAAA,0CAKI,IAFJ,IAAAC,EAAAN,EAAA,GAAA,EACQO,EAARC,KAAAC,MAAAT,GACAK,EAAA,EAAAA,EAAA,EAAAA,IACAA,EAAAL,IACSd,KAATM,KAAAa,GAAA,QAAiBC,GAAYC,GAA7BF,IACSnB,KAATM,KAAAa,GAAA,SAEApB,oBA1EAyB,KAACC,EAAAA,UAADC,OACEC,SAAU,kBACVC,SAAU,o9BAWZzB,aAAAqB,KAAAK,EAAAA,SACAxB,WAAAmB,KAAWM,EAAAA,MAAXJ,MAAA,oCAOA,uBAEAK,EAAGC,aACHR,KAAAS,EAAAA,SAAAP"
}
