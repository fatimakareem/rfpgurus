{"version":3,"file":"angular-file-picker.umd.min.js","sources":["~/angular-file-picker/picked-file-impl.ts","~/angular-file-picker/read-mode.enum.ts","~/angular-file-picker/file-picker.directive.ts","~/angular-file-picker/angular-file-picker.module.ts"],"sourcesContent":["import { PickedFile } from './picked-file';\nimport { ReadMode } from './read-mode.enum';\nexport class PickedFileImpl implements PickedFile {\n/**\n * @return {?}\n */\nget lastModifiedDate(): Date {\n    return this._lastModifiedDate;\n  }\n/**\n * @return {?}\n */\nget name(): string {\n    return this._name;\n  }\n/**\n * @return {?}\n */\nget size(): number {\n    return this._size;\n  }\n/**\n * @return {?}\n */\nget type(): string {\n    return this._type;\n  }\n/**\n * @return {?}\n */\nget readMode(): ReadMode {\n    return this._readMode;\n  }\n/**\n * @return {?}\n */\nget content(): any {\n    return this._content;\n  }\n/**\n * @param {?} _lastModifiedDate\n * @param {?} _name\n * @param {?} _size\n * @param {?} _type\n * @param {?} _readMode\n * @param {?} _content\n */\nconstructor(\nprivate _lastModifiedDate: Date,\nprivate _name: string,\nprivate _size: number,\nprivate _type: string,\nprivate _readMode: ReadMode,\nprivate _content: any) {\n  }\n}\n\nfunction PickedFileImpl_tsickle_Closure_declarations() {\n/** @type {?} */\nPickedFileImpl.prototype._lastModifiedDate;\n/** @type {?} */\nPickedFileImpl.prototype._name;\n/** @type {?} */\nPickedFileImpl.prototype._size;\n/** @type {?} */\nPickedFileImpl.prototype._type;\n/** @type {?} */\nPickedFileImpl.prototype._readMode;\n/** @type {?} */\nPickedFileImpl.prototype._content;\n}\n\n","\nexport type ReadMode = number;\nexport let ReadMode: any = {};\nReadMode.arrayBuffer = 0;\nReadMode.binaryString = 1;\nReadMode.dataURL = 2;\nReadMode.text = 3;\nReadMode[ReadMode.arrayBuffer] = \"arrayBuffer\";\nReadMode[ReadMode.binaryString] = \"binaryString\";\nReadMode[ReadMode.dataURL] = \"dataURL\";\nReadMode[ReadMode.text] = \"text\";\n\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  HostListener,\n  OnInit,\n  Output,\n  Renderer2\n} from '@angular/core';\n\nimport { PickedFile } from './picked-file';\nimport { PickedFileImpl } from './picked-file-impl';\nimport { ReadMode } from './read-mode.enum';\nexport class FilePickerDirective implements OnInit {\npublic accept = '';\n/**\n * @return {?}\n */\nget multiple() { return this._multiple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset multiple(value: any) { this._multiple = coerceBooleanProperty(value); }\n\n   readMode: ReadMode;\npublic filePick = new EventEmitter<PickedFile>();\npublic readStart = new EventEmitter<number>();\npublic readEnd = new EventEmitter<number>();\nprivate _multiple: boolean;\nprivate input: any;\n/**\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(private el: ElementRef,\nprivate renderer: Renderer2) {\n  }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    this.input = this.renderer.createElement('input');\n    this.renderer.appendChild(this.el.nativeElement, this.input);\n\n    this.renderer.setAttribute(this.input, 'type', 'file');\n    this.renderer.setAttribute(this.input, 'accept', this.accept);\n    this.renderer.setStyle(this.input, 'display', 'none');\n\n    if (this.multiple) {\n      this.renderer.setAttribute(this.input, 'multiple', 'multiple');\n    }\n\n    this.renderer.listen(this.input, 'change', (event: any) => {\n      const /** @type {?} */ fileCount = event.target.files.length;\n\n      this.readStart.emit(event.target.files.length);\n      Promise.all(Array.from<File>(event.target.files).map(file => this.readFile(file)))\n        .then(() => this.readEnd.emit(fileCount));\n    });\n  }\n/**\n * @return {?}\n */\npublic reset() {\n    if (!this.input) {\n      console.error('It seems that ngOnInit() has not been executed or that the hidden input element is null. Did you mess with the DOM?');\n      return;\n    }\n\n    this.input.value = null;\n  }\n/**\n * @return {?}\n */\nprivate browse() {\n    if (!this.input) {\n      console.error('It seems that ngOnInit() has not been executed or that the hidden input element is null. Did you mess with the DOM?');\n      return;\n    }\n\n    this.input.click();\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nprivate readFile(file: File): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const /** @type {?} */ reader = new FileReader();\n\n      reader.onload = (loaded: ProgressEvent) => {\n        const /** @type {?} */ fileReader = /** @type {?} */(( loaded.target as FileReader));\n        const /** @type {?} */ pickedFile = new PickedFileImpl(file.lastModifiedDate, file.name, file.size, file.type, this.readMode, fileReader.result);\n\n        this.filePick.emit(pickedFile);\n        resolve();\n      };\n\n      switch (this.readMode) {\n        case ReadMode.arrayBuffer:\n          reader.readAsArrayBuffer(file);\n          break;\n        case ReadMode.binaryString:\n          reader.readAsBinaryString(file);\n          break;\n        case ReadMode.text:\n          reader.readAsText(file);\n          break;\n        case ReadMode.dataURL:\n        default:\n          reader.readAsDataURL(file);\n          break;\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngFilePicker]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'accept': [{ type: Input },],\n'multiple': [{ type: Input },],\n'readMode': [{ type: Input, args: ['ngFilePicker', ] },],\n'filePick': [{ type: Output },],\n'readStart': [{ type: Output },],\n'readEnd': [{ type: Output },],\n'browse': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction FilePickerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFilePickerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilePickerDirective.ctorParameters;\n/** @type {?} */\nFilePickerDirective.propDecorators;\n/** @type {?} */\nFilePickerDirective.prototype.accept;\n/** @type {?} */\nFilePickerDirective.prototype.readMode;\n/** @type {?} */\nFilePickerDirective.prototype.filePick;\n/** @type {?} */\nFilePickerDirective.prototype.readStart;\n/** @type {?} */\nFilePickerDirective.prototype.readEnd;\n/** @type {?} */\nFilePickerDirective.prototype._multiple;\n/** @type {?} */\nFilePickerDirective.prototype.input;\n/** @type {?} */\nFilePickerDirective.prototype.el;\n/** @type {?} */\nFilePickerDirective.prototype.renderer;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value: any): boolean {\n  return value != null && `${value}` !== 'false';\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FilePickerDirective } from './file-picker.directive';\nexport class AngularFilePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [FilePickerDirective],\n  exports: [FilePickerDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AngularFilePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularFilePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularFilePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["PickedFileImpl","_lastModifiedDate","_name","_size","_type","_readMode","_content","this","Object","defineProperty","prototype","get","ReadMode","arrayBuffer","binaryString","dataURL","text","FilePickerDirective","el","renderer","accept","filePick","EventEmitter","readStart","readEnd","_multiple","set","value","coerceBooleanProperty","ngOnInit","_this","input","createElement","appendChild","nativeElement","setAttribute","setStyle","multiple","listen","event","fileCount","target","files","length","emit","Promise","all","Array","from","map","file","readFile","then","reset","console","error","browse","click","resolve","reject","reader","FileReader","onload","loaded","fileReader","pickedFile","lastModifiedDate","name","size","type","readMode","result","readAsArrayBuffer","readAsBinaryString","readAsText","readAsDataURL","decorators","Directive","args","selector","ctorParameters","ElementRef","Renderer2","propDecorators","Input","Output","HostListener","AngularFilePickerModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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"}
